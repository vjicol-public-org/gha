name: Label Deploy Requests

on:
  issues:
    types: [opened, edited]
    
permissions:
  issues: write
  


jobs:
  validate-user:
    runs-on: ubuntu-latest
    if: github.event.issue.labels.*.name != 'deploy-request'
    steps:
      - name: Check user team and update issue if unauthorized
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body;
            const username = context.payload.issue.user.login;
            const issue_number = context.issue.number;
            const org = context.repo.owner;

            // Extract environment and team
            const envMatch = body.match(/### Environment\s+([^\n]+)/);
            const teamMatch = body.match(/### Requesting Team\s+([^\n]+)/);
            const environment = envMatch ? envMatch[1].trim().toLowerCase() : null;
            const teamSlug = teamMatch ? teamMatch[1].trim().toLowerCase() : null;

            if (!environment || !teamSlug) {
              core.setFailed(`❌ Missing environment or team info in the issue body.`);
              return;
            }

            try {
              // Validate if user is in the selected team
              await github.rest.teams.getMembershipForUserInOrg({
                org,
                team_slug: teamSlug,
                username,
              });

              console.log(`✅ @${username} is a member of the "${teamSlug}" team. Proceeding with ${environment} deployment.`);
            } catch (error) {
              const message = `❌ @${username} is **not** a member of the **${teamSlug}** team. Cannot proceed with **${environment}** deployment.`;

              await github.rest.issues.createComment({
                owner: org,
                repo: context.repo.repo,
                issue_number,
                body: message,
              });

              core.setFailed(message);
            }

  label:
    runs-on: ubuntu-latest
    needs: validate-user
    if: success()
    steps:
      - name: Add label based on environment
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body.toLowerCase();
            const labels = [];

            if (body.includes("uat")) labels.push("uat");
            if (body.includes("prod")) labels.push("prod");

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels,
              });
            }
